import { Badge, Button, Card, Col, ListGroup, Row, Tab, Table } from "react-bootstrap"
import { Bar, Line } from "react-chartjs-2"
import { v4 as uuid } from "uuid"
import * as petitionerGraph from "./GraphData"
import { ContactCard } from "./ContactCard"
import { useEffect } from "react"
import { actions } from "store/slices/petitionerSlice"
import { useDispatch, useSelector } from "react-redux"
import { petitionerService } from "services/petitioner.service"
import { SimpleLoader } from "components/Common/SimpleLoader"
import { Zoom, toast } from "react-toastify"
import { useSearchParams, useLocation } from "react-router-dom"

export const Overview = ({ petitionerID }) => {

    const dispatch = useDispatch()
    const location = useLocation()

    const overviewState = useSelector((state) => state.petitioner.profileData.overview)
    const [searchParams, _] = useSearchParams()

    const loadAPI = () => {
        dispatch(actions.setTabLoader({ tab: 'overview', status: true }))
        petitionerService.getPetitionerOverview(petitionerID).then((res) => {
            dispatch(actions.setPetitionerOverview(res))
        })
    }

    useEffect(() => {

        if (searchParams.get('pane') === 'Overview')
            loadAPI()
    }, [location.pathname, searchParams.get('pane'), searchParams.get('id')])

    return overviewState?.loading ? <SimpleLoader /> : (
        <Card className="custom-card main-content-body-profile mb-0">
            <div className="tab-content">
                <div className="main-content-body tab-paneactive p-3 active">
                    <h4 className="tx-15 d-inline text-uppercase mb-3">Overview</h4>
                    <Button variant="primary" size="sm" className="float-end">
                        Total Active Beneficiaries{" "}
                        <Badge pill bg="light" className="ms-3">
                            16
                        </Badge>
                        <span className="visually-hidden">unread messages</span>
                    </Button>
                    <Row className="mt-4">
                        <Col xl={6}>
                            <div className="d-flex justify-content-between">
                                <div>
                                    <label className="main-content-label my-auto pt-2">Total Projects</label>
                                    <span className="d-block tx-12 mb-0 mt-1 text-muted">Revenue is the total amount of income generated by the sale of goods.</span>
                                </div>
                            </div>

                            <div className="chart-wrapperchart-dropshadow2 ht-300">
                                <Line options={petitionerGraph.linechartoptions} data={petitionerGraph.linechart(overviewState?.filed, overviewState?.initiated)} className="barchart chart-dropshadow2 ht-300 chartjs-render-monitor" height="100" />
                            </div>
                        </Col>
                        <Col xl={6}>
                            <div className="d-flex justify-content-between">
                                <div>
                                    <label className="main-content-label my-auto pt-2">Total Immigration Spend</label>
                                    <span className="d-block tx-12 mb-0 mt-1 text-muted">Revenue is the total amount of income generated by the sale of goods.</span>
                                </div>
                            </div>
                            {/* <div className="chart-wrapperchart-dropshadow2 ht-300">
                                    <Line options={petitionerGraph.linechartoptions1} data={petitionerGraph.linechart1} className="barchart chart-dropshadow2 ht-300 chartjs-render-monitor" height="100" />
                                </div> */}
                            <div className="chartjs-wrapper-demo ht-300">
                                <Bar
                                    options={petitionerGraph.Barchart1}
                                    data={petitionerGraph.barchart1data(overviewState?.total_spend)}
                                    className="barchart"
                                    height="300"
                                    style={{
                                        paddingTop: "35px",
                                    }}
                                />
                            </div>
                        </Col>
                    </Row>
                </div>
            </div>
        </Card>
    )
}
export const Incorporation = ({ petitionerID }) => {

    const dispatch = useDispatch()
    const location = useLocation()
    const incorporationState = useSelector((state) => state.petitioner.profileData.incorporation)
    const [searchParams, _] = useSearchParams()

    const loadAPI = () => {
        dispatch(actions.setTabLoader({ tab: 'incorporation', status: true }))
        petitionerService.getPetitionerIncorporation(petitionerID).then((res) => {
            dispatch(actions.setPetitionerIncorporation(res.incorporation))
        })
    }

    useEffect(() => {
        if (searchParams.get('pane') === 'Incorporation')
            loadAPI()
    }, [location.pathname, searchParams.get('pane'), searchParams.get('id')])

    return incorporationState?.loading ? <SimpleLoader /> : (
        <Card className="custom-card main-content-body-profile mb-0">
            <div className="tab-content">
                <div className="main-content-body tab-paneactive p-3 active">
                    <h4 className="tx-15 text-uppercase">Company Incorporation Data</h4>
                    <div className="main-contact-info-body py-0">
                        <div className="media-list">
                            <div className="media">
                                <div className="media-body">
                                    <div>
                                        <label>Legal Name:</label>
                                        <span className="tx-medium">{incorporationState.TradeNameDBA}</span>
                                    </div>
                                    <div>
                                        <label>D/B/A Name:</label>
                                        <span className="tx-medium">{incorporationState.YearEstablished}</span>
                                    </div>
                                </div>
                            </div>
                            <div className="media">
                                <div className="media-body">
                                    <div>
                                        <label>Year Established:</label>
                                        <span className="tx-medium">{incorporationState.YearEstablished}</span>
                                    </div>
                                    <div>
                                        <label>Business Type:</label>
                                        <span className="tx-medium">{incorporationState.BusinessType}</span>
                                    </div>
                                </div>
                            </div>
                            <div className="media mb-0">
                                <div className="media-body">
                                    <div>
                                        <label>FEIN:</label>
                                        <span className="tx-medium">{incorporationState.FederalEmployerID}</span>
                                    </div>
                                    <div>
                                        <label>NAICS Code:</label>
                                        <span className="tx-medium">{incorporationState.NAICSCode}</span>
                                    </div>
                                </div>
                            </div>
                            <div className="media">
                                <div className="media-body">
                                    <div>
                                        <label>Place Established:</label>
                                        <span className="tx-medium">{incorporationState.PlaceEstablished}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </Card>
    )
}
export const Employee = ({ petitionerID }) => {

    const dispatch = useDispatch()
    const location = useLocation()
    const employeeState = useSelector((state) => state.petitioner.profileData.employee)
    const [searchParams, _] = useSearchParams()

    const loadAPI = () => {
        dispatch(actions.setTabLoader({ tab: 'employee', status: true }))
        petitionerService.getPetitionerEmployeeRevenue(petitionerID).then((res) => {
            dispatch(actions.setPetitionerEmployee(res.employee_revenue))
        })
    }

    useEffect(() => {
        if (searchParams.get('pane') === 'EmployeeRevenue')
            loadAPI()
    }, [location.pathname, searchParams.get('pane'), searchParams.get('id')])

    const emp_rev = [
        { key: "Number of Employees", us: employeeState.EmployeeCountUS, global: employeeState.EmployeeCountGlobal },
        { key: "Gross Revenue", us: employeeState.AnnualIncomeGrossUS, global: employeeState.AnnualIncomeGrossGlobal },
        { key: "Net Revenue", us: employeeState.AnnualIncomeNetUS, global: employeeState.AnnualIncomeNetGlobal },
    ]

    return employeeState?.loading ? <SimpleLoader /> : (
        <Card className="custom-card main-content-body-profile mb-0">
            <div className="tab-content">
                <div className="main-content-body tab-paneactive p-3 active">
                    <h4 className="tx-15 text-uppercase mb-3">Company Employee & Revenue Data</h4>
                    <Row>
                        <Col lg={12}>
                            <Table className="table text-nowrap text-md-nowrap table-striped mg-b-0 border">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>
                                            <b>U.S.</b>
                                        </th>
                                        <th>
                                            <b>Global</b>
                                        </th>
                                        <th>
                                            <b>Combined</b>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {emp_rev.map((list, index) => (
                                        <tr key={index} data-index={index}>
                                            <th scope="row">{list.key}</th>
                                            <td>{list.us}</td>
                                            <td>{list.global} </td>
                                            <td>{list.us + list.global}</td>
                                        </tr>
                                    ))}
                                </tbody>
                            </Table>
                        </Col>
                    </Row>
                </div>
            </div>
        </Card>
    )
}
export const Immigration = ({ petitionerID }) => {

    const dispatch = useDispatch()
    const location = useLocation()
    const immigrationState = useSelector((state) => state.petitioner.profileData.immigration)
    const [searchParams, _] = useSearchParams()

    const loadAPI = () => {
        dispatch(actions.setTabLoader({ tab: 'immigration', status: true }))
        petitionerService.getPetitionerImmigration(petitionerID).then((res) => {
            dispatch(actions.setPetitionerImmigration(res.immigration))
        })
    }

    useEffect(() => {
        if (searchParams.get('pane') === 'Immigration')
            loadAPI()
    }, [location.pathname, searchParams.get('pane'), searchParams.get('id')])

    return immigrationState?.loading ? <SimpleLoader /> : (
        <Card className="custom-card main-content-body-profile mb-0">
            <div className="tab-content">
                <div className="main-content-body tab-paneactive p-3 active">
                    <h4 className="tx-15 text-uppercase mb-3">Company Immigration Data</h4>
                    <div className="main-contact-info-body py-0">
                        <div className="media-list">
                            <div className="media">
                                <div className="media-body">
                                    <div>
                                        <label>Blanket L Approval Number:</label>
                                        <span className="tx-medium">{immigrationState.BlanketLApprovalNumber}</span>
                                    </div>
                                    <div>
                                        <label>Blanket L Expiration Date:</label>
                                        <span className="tx-medium">{immigrationState.BlanketLExpirationDate}</span>
                                    </div>
                                </div>
                            </div>
                            <div className="media">
                                <div className="media-body">
                                    <div>
                                        <label>Is Petitioner on Blanket L?:</label>
                                        <span className="tx-medium">{immigrationState.IncludedonCompanyBlanketL ? "Yes" : "No"}</span>
                                    </div>
                                    <div>
                                        <label>Is Petitioner H-1B Dependent Employer?</label>
                                        <span className="tx-medium">{immigrationState.H1BDependentEmployer ? "Yes" : "No"}</span>
                                    </div>
                                </div>
                            </div>
                            <div className="media mb-0">
                                <div className="media-body">
                                    <div>
                                        <label>Is Petitioner Willful Violator?</label>
                                        <span className="tx-medium">{immigrationState.PetitionerWillfulViolator ? "Yes" : "No"}</span>
                                    </div>
                                    <div>
                                        <label>H/L Employee %:</label>
                                        <span className="tx-medium">50%</span>
                                    </div>
                                </div>
                            </div>
                            <div className="media">
                                <div className="media-body">
                                    <div>
                                        <label>Place Established:</label>
                                        <span className="tx-medium">012 Dashboard Apartments, San Francisco, California 13245</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </Card>
    )
}
export const Authorized = ({ petitionerID }) => {

    const dispatch = useDispatch()
    const location = useLocation()
    const authorizedState = useSelector((state) => state.petitioner.profileData.authorized)
    const [searchParams, _] = useSearchParams()

    const loadAPI = () => {
        dispatch(actions.setTabLoader({ tab: 'authorized', status: true }))
        petitionerService.getPetitionerCompanyAuth(petitionerID).then((res) => {
            dispatch(actions.setPetitionerAuthorized({ data: res.authorized_signatory }))
        })
    }

    useEffect(() => {
        if (searchParams.get('pane') === 'AuthorizedSignatoryInfo')
            loadAPI()
    }, [location.pathname, searchParams.get('pane'), searchParams.get('id')])


    return authorizedState?.loading ? <SimpleLoader /> : (
        <div className="main-content-body tab-paneactive p-3 active">
            <h4 className="tx-15 text-uppercase mb-3">Company Authorized Signatory Info</h4>
            <Row className="row-sm">
                {authorizedState.data.map(info => {
                    return <Col sm={12} md={4} key={uuid()}>
                        <ContactCard data={info} />
                    </Col>
                })}
            </Row>
        </div>
    )
}
export const Contact = ({ petitionerID }) => {

    const dispatch = useDispatch()
    const location = useLocation()
    const contactState = useSelector((state) => state.petitioner.profileData.contact)
    const [searchParams, _] = useSearchParams()

    const loadAPI = () => {
        dispatch(actions.setTabLoader({ tab: 'contact', status: true }))
        petitionerService.getPetitionerContact(petitionerID).then((res) => {
            dispatch(actions.setPetitionerContact(res.contact))
        })
    }

    useEffect(() => {
        if (searchParams.get('pane') === 'Contact')
            loadAPI()
    }, [location.pathname, searchParams.get('pane'), searchParams.get('id')])

    return contactState?.loading ? <SimpleLoader /> : (
        <Card className="custom-card main-content-body-profile mb-0">
            <div className="tab-content">
                <div className="main-content-body tab-paneactive p-3 active">
                    <h4 className="tx-15 text-uppercase mb-3">Company Contact Info</h4>
                    <Row className="row-sm">
                        <Col sm={12} md={4}>
                            <ContactCard data={contactState} />
                        </Col>
                    </Row>
                </div>
            </div>
        </Card>
    )
}
export const DMSWorkspaceLink = ({ petitionerID }) => {

    const data = [{
        name: "Company Docs",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FCompany%20Docs&viewid=
        130cda98%2Dcf06%2D44c8%2D9527%2D4dc0985264bf`
    }, {
        name: "Correspondence",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FCorrespondence&viewid=13
        0cda98%2Dcf06%2D44c8%2D9527%2D4dc0985264bf`
    }, {
        name: "Financial Docs",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FFinancial%20Docs&viewid=1
        30cda98%2Dcf06%2D44c8%2D9527%2D4dc0985264bf`
    }, {
        name: "LCA PAFs",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FLCA%20PAFs&viewid=130cd
        a98%2Dcf06%2D44c8%2D9527%2D4dc0985264bf`
    }, {
        name: "LCAs",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FLCAs&viewid=130cda98%2D
        cf06%2D44c8%2D9527%2D4dc0985264bf
        `
    }, {
        name: "Misc.",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FMisc&viewid=130cda98%2D
        cf06%2D44c8%2D9527%2D4dc0985264bf`
    }, {
        name: "PERM Audit Files",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FPERM%20Audit%20Files&vi
        ewid=130cda98%2Dcf06%2D44c8%2D9527%2D4dc0985264bf`
    }, {
        name: "Reports",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FReports&viewid=130cda98%
        2Dcf06%2D44c8%2D9527%2D4dc0985264bf`
    }, {
        name: "Supporting Docs",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FSupporting%20Docs&viewid
        =130cda98%2Dcf06%2D44c8%2D9527%2D4dc0985264bf`
    }, {
        name: "Templates",
        link: `https://immilytics.sharepoint.com/sites/IMMCorp1/Shared%20Documents/Forms/AllItems.aspx?id=%2F
        sites%2FIMMCorp1%2FShared%20Documents%2FDocument%20Library%2FTemplates&viewid=130cda9
        8%2Dcf06%2D44c8%2D9527%2D4dc0985264bf`
    }]

    const handleLink = (link) => {
        window.open(link, '_blank')
    }

    return <Card className="custom-card main-content-body-profile mb-0">
        <div className="tab-content">
            <div className="main-content-body tab-paneactive p-3 active">
                <h4 className="tx-15 text-uppercase mb-3">DSM Workspace Link</h4>
                <Row className="row-sm">
                    <Col sm={12} md={4}>
                        <ListGroup className="projects-list mt-0" >
                            {data.map((item, index) => {
                                return (<ListGroup.Item action
                                    className="flex-column align-items-start p-2"
                                    onClick={() => handleLink(item.link)}
                                    key={index}
                                >
                                    <div className="d-flex w-100 justify-content-between">
                                        <h6 className="mb-1 font-weight-semibold ">{item.name}</h6>
                                    </div>
                                </ListGroup.Item>)
                            })}
                        </ListGroup>
                    </Col>
                </Row>

            </div>
        </div>
    </Card>
}

const TabContainer = () => {

    const profileData = useSelector((state) => state.petitioner.profileData)

    return profileData?.petitionerID === 0 ? null : <Tab.Content>
        <Tab.Pane eventKey="Overview">
            <Overview petitionerID={profileData?.petitionerID} />
        </Tab.Pane>
        <Tab.Pane eventKey="Incorporation">
            <Incorporation petitionerID={profileData?.petitionerID} />
        </Tab.Pane>

        <Tab.Pane eventKey="Employee">
            <Employee petitionerID={profileData?.petitionerID} />
        </Tab.Pane>

        <Tab.Pane eventKey="Immigration">
            <Immigration petitionerID={profileData?.petitionerID} />
        </Tab.Pane>

        <Tab.Pane eventKey="Authorized">
            <Authorized petitionerID={profileData?.petitionerID} />
        </Tab.Pane>

        <Tab.Pane eventKey="Contact">
            <Contact petitionerID={profileData?.petitionerID} />
        </Tab.Pane>

        <Tab.Pane eventKey="DMSWorkspaceLink">
            <DMSWorkspaceLink petitionerID={33} />
        </Tab.Pane>
    </Tab.Content>
}

export default TabContainer