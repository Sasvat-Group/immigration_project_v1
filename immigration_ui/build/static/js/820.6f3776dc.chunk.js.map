{"version":3,"file":"static/js/820.6f3776dc.chunk.js","mappings":"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","sources":["utils/textValidator.js","components/Beneficiary/TabComponents.js"],"sourcesContent":["export function textValidator(value, defaultValue = 'NA') {\r\n\r\n    if (value && typeof value === 'boolean')\r\n        return value ? 'Yes' : 'No'\r\n\r\n    return value || defaultValue\r\n}\r\n\r\nexport function trimDate(value) {\r\n    return value?.toString().replaceAll(' 00:00:00 GMT', '')\r\n}","import React, { useEffect } from 'react'\r\nimport { Card, Col, ListGroup, Row, Table } from 'react-bootstrap'\r\nimport { Link, useNavigate, useSearchParams } from 'react-router-dom'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { useState } from 'react'\r\nimport { Popover, Step, StepLabel, Stepper, stepLabelClasses } from '@mui/material'\r\nimport { Check } from '@mui/icons-material'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { actions } from 'store/slices/beneficiarySlice'\r\nimport { beneficiaryService } from 'services/beneficiary.service'\r\nimport { SimpleLoader } from 'components/Common/SimpleLoader'\r\nimport { textValidator, trimDate } from 'utils/textValidator'\r\n\r\nconst Tile = ({ item }) => {\r\n    return (\r\n        <div className=\"tile-content\">\r\n            <h5>{item.title}</h5>\r\n            {item.values.map((value) => (\r\n                <div key={uuidv4()} className=\"d-flex justify-content-between\">\r\n                    <span>{value.key}</span>\r\n                    {value.type && value.type === 'link' ? (\r\n                        <a href={value.value} rel=\"noreferrer\" target=\"_blank\">\r\n                            View\r\n                        </a>\r\n                    ) : (\r\n                        <b className=\"tile-value\">{value.value}</b>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function BeneficiaryImmigrationTimeline() {\r\n    const dispatch = useDispatch()\r\n\r\n    const immigrationTimelineState = useSelector((state) => state.beneficiary.profileData.immigrationTimeline)\r\n    const _id = useSelector((state) => state.beneficiary.profileData.beneficiary.id)\r\n    const [searchParams, _] = useSearchParams()\r\n\r\n    const extractData = (leaf) => immigrationTimelineState?.[leaf]\r\n\r\n    const stepswizard = [\r\n        { name: 'H-1B Cap Petition', ...extractData('h1b') },\r\n        { name: 'Recent Underlying NIV Petition', ...extractData('runp') },\r\n        { name: 'Recent PERM Application', ...extractData('rpa') },\r\n        { name: 'Recent I-140 Petition', ...extractData('ri140p') },\r\n        { name: 'Recent I-130 Petition', ...extractData('ri130p') },\r\n        { name: 'Recent AOS Application', ...extractData('raosa') }\r\n    ]\r\n\r\n    const loadAPI = () => {\r\n        dispatch(actions.setTabLoader({ tab: 'immigrationTimeline', status: true }))\r\n        beneficiaryService.getImmigrationTimeline(_id).then((res) => {\r\n            dispatch(actions.setImmigrationTimeline(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('pane') === '1') {\r\n            loadAPI()\r\n        }\r\n    }, [])\r\n\r\n    const [activeStep] = useState(3)\r\n\r\n    const StepDetails = ({ className, data }) => {\r\n        searchParams.set('projectID', textValidator(data?.ProjectID))\r\n\r\n        const projectLink = `./?${searchParams.toString()}`\r\n\r\n        if (className === 'for-popover') {\r\n            return (\r\n                <ul className={`stepper-list ${className}`}>\r\n                    <li>\r\n                        <span>Year Initiated</span>\r\n                        <b>{textValidator(data.YearInitiated)}</b>\r\n                    </li>\r\n                    <li>\r\n                        <span>Year Filed</span>\r\n                        <b>{textValidator(data.YearFiled)}</b>\r\n                    </li>\r\n                    <li>\r\n                        <span>Year Closed</span>\r\n                        <b>{textValidator(data.YearClosed)}</b>\r\n                    </li>\r\n                    <li>\r\n                        <span>Project Status</span>\r\n                        <b>{textValidator(data.ProjectPrimaryStatus)}</b>\r\n                    </li>\r\n                    <li>\r\n                        <span>Project ID</span>\r\n                        <Link to={projectLink}>View</Link>\r\n                    </li>\r\n                </ul>\r\n            )\r\n        } else {\r\n            return (\r\n                <ul className={`stepper-list ${className}`}>\r\n                    <li>\r\n                        <b>{textValidator(data?.YearInitiated)}</b>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={projectLink}>View</Link>\r\n                    </li>\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n\r\n    const CustomStepLabel = styled(StepLabel)(({ index }) => ({\r\n        [`&.${stepLabelClasses.root}`]: {\r\n            [`&.${stepLabelClasses.alternativeLabel}`]: {\r\n                flexDirection: index % 2 === 0 ? 'column' : 'column-reverse'\r\n            },\r\n            [`.${stepLabelClasses.labelContainer}`]: {\r\n                [`.${stepLabelClasses.label}`]: {\r\n                    marginBottom: '1rem'\r\n                }\r\n            }\r\n        }\r\n    }))\r\n\r\n    const StepIconComponent = (index, data) => {\r\n        const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n        const handlePopoverOpen = (event) => {\r\n            setAnchorEl(event.currentTarget)\r\n        }\r\n\r\n        const handlePopoverClose = () => {\r\n            setAnchorEl(null)\r\n        }\r\n\r\n        const open = Boolean(anchorEl)\r\n\r\n        return (\r\n            <div>\r\n                <div\r\n                    className={`step-icon-bg ${index <= activeStep ? 'active' : null}`}\r\n                    style={{\r\n                        backgroundColor: `${index % 2 === 0 ? '#6259ca' : '#ec3487'}`\r\n                    }}\r\n                    aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    // onClick={handlePopoverOpen}\r\n                    onMouseEnter={handlePopoverOpen}\r\n                    onMouseLeave={handlePopoverClose}\r\n                >\r\n                    <Check />\r\n                </div>\r\n                {index <= activeStep ? (\r\n                    <Popover\r\n                        id=\"mouse-over-popover\"\r\n                        sx={{\r\n                            pointerEvents: 'none'\r\n                        }}\r\n                        open={open}\r\n                        anchorEl={anchorEl}\r\n                        onClose={handlePopoverClose}\r\n                        disableRestoreFocus\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center'\r\n                        }}\r\n                    >\r\n                        <StepDetails className=\"for-popover\" data={data} />\r\n                    </Popover>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return immigrationTimelineState?.loading ? (\r\n        <SimpleLoader />\r\n    ) : (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body>\r\n                <h5 className=\"main-content-label\">Beneficiary Immigration Timeline</h5>\r\n                <div className=\"timeline-stepper-container\">\r\n                    <div className=\"step-fields\">\r\n                        <h5>Year Initiated</h5>\r\n                        <h5>Project ID</h5>\r\n                    </div>\r\n                    <Stepper\r\n                        activeStep={activeStep}\r\n                        connector={null}\r\n                        alternativeLabel\r\n                        className=\"stepper-container mt-5\"\r\n                    >\r\n                        {stepswizard.map((step, index) => {\r\n                            return (\r\n                                <Step key={uuidv4()}>\r\n                                    <div style={{ height: '100px' }}>\r\n                                        <CustomStepLabel\r\n                                            index={index}\r\n                                            StepIconComponent={() => StepIconComponent(index, step)}\r\n                                        >\r\n                                            {step.name}\r\n                                        </CustomStepLabel>\r\n                                    </div>\r\n                                    {index <= activeStep ? <StepDetails data={step} /> : null}\r\n                                </Step>\r\n                            )\r\n                        })}\r\n                    </Stepper>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function ImmigrationStatusKeyDates() {\r\n    const dispatch = useDispatch()\r\n\r\n    const initState = useSelector((state) => state.beneficiary.profileData.immigrationStatusKeyDates)\r\n    const _id = useSelector((state) => state.beneficiary.profileData.beneficiary.id)\r\n    const [searchParams, _] = useSearchParams()\r\n\r\n    const loadAPI = () => {\r\n        dispatch(actions.setTabLoader({ tab: 'immigrationStatusKeyDates', status: true }))\r\n        beneficiaryService.getImmigrationStatusKeyDates(_id).then((res) => {\r\n            dispatch(actions.setImmigrationStatusKeyDates(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('pane') === '3') {\r\n            loadAPI()\r\n        }\r\n    }, [])\r\n\r\n    const list = {\r\n        group: [\r\n            {\r\n                title: 'Immigration',\r\n                values: [\r\n                    { key: 'Status', value: textValidator(initState?.immigration_status?.ImmigrationStatusType) },\r\n                    { key: 'Status Exp', value: textValidator(trimDate(initState?.immigration_status?.StatusExpDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'I-797',\r\n                values: [\r\n                    { key: 'Approved Date', value: textValidator(trimDate(initState?.i797?.DecisionNoticeDate)) },\r\n                    { key: 'Status', value: textValidator(initState?.i797?.CurrentI797Status) },\r\n                    { key: 'Valid From', value: textValidator(trimDate(initState?.i797?.DecisionNoticeDate)) },\r\n                    { key: 'Exp Date', value: textValidator(trimDate(initState?.i797?.CurrentI797ExpirationDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'I-129S',\r\n                values: [\r\n                    { key: 'End Date', value: textValidator(trimDate(initState?.i129s?.CurrentI797ExpirationDate)) },\r\n                    { key: 'Requested Date', value: textValidator(trimDate(initState?.i129s?.DecisionNoticeDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'U.S. Entry',\r\n                values: [\r\n                    { key: 'Most Recent Entry Date', value: textValidator(trimDate(initState?.us_entry?.EntryDate)) },\r\n                    { key: 'I-94 Number', value: textValidator(trimDate(initState?.us_entry?.I94Number)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Visa',\r\n                values: [\r\n                    { key: 'Type', value: textValidator(trimDate(initState?.visa?.VisaClass)) },\r\n                    { key: 'Exp Date', value: textValidator(trimDate(initState?.visa?.ValidTo)) },\r\n                    { key: 'PED', value: textValidator(trimDate(initState?.visa?.VisaPedDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'PR Data',\r\n                values: [\r\n                    {\r\n                        key: 'Re-Entry Permit Exp Date',\r\n                        value: textValidator(trimDate(initState?.pr_data?.PermitExpDate))\r\n                    },\r\n                    { key: 'Green Card Exp Date', value: textValidator(trimDate(initState?.pr_data?.GreenCardExpDate)) }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    return initState?.loading ? (\r\n        <SimpleLoader />\r\n    ) : (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body className=\"\">\r\n                <h5 className=\"main-content-label\">Immigration Status & Key Dates</h5>\r\n                <Row className=\" row-sm\">\r\n                    {list.group.map((item) => {\r\n                        return (\r\n                            <Col md={6} xl={4} className=\"mb-3 h-185\" key={uuidv4()}>\r\n                                <Tile item={item} />\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function OpenCases() {\r\n    const navigate = useNavigate()\r\n\r\n    const handleRedirect = (page, caseType) => {\r\n        if (page === 'case-spec') {\r\n            navigate('/case-info/specific', { state: { caseType } })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body className=\"\">\r\n                <h5 className=\"main-content-label\">Projects</h5>\r\n\r\n                <Row className=\"row-sm\">\r\n                    <Col md={4} bg=\"primary\">\r\n                        <Card\r\n                            className=\"custom-card bg-primary tx-white\"\r\n                            onClick={() => handleRedirect('case-spec', 'open')}\r\n                        >\r\n                            <Card.Body>\r\n                                <div className=\"d-flex align-items-center currency-item\">\r\n                                    <div>\r\n                                        <span className=\"tx-13 mb-3\">Open Projects</span>\r\n                                        <h3 className=\"m-0 mt-2\">15</h3>\r\n                                    </div>\r\n                                    <div className=\"ms-auto mt-auto\">\r\n                                        <i className=\"cf cf-btc\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card\r\n                            className=\"custom-card bg-success tx-white\"\r\n                            onClick={() => handleRedirect('case-spec', 'open')}\r\n                        >\r\n                            <Card.Body>\r\n                                <div className=\"d-flex align-items-center currency-item\">\r\n                                    <div>\r\n                                        <span className=\"tx-13 mb-3\">Approved Projects</span>\r\n                                        <h3 className=\"m-0 mt-2\">6</h3>\r\n                                    </div>\r\n                                    <div className=\"ms-auto mt-auto\">\r\n                                        <i className=\"cf cf-btc\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card\r\n                            className=\"custom-card bg-danger tx-white\"\r\n                            onClick={() => handleRedirect('case-spec', 'open')}\r\n                        >\r\n                            <Card.Body>\r\n                                <div className=\"d-flex align-items-center currency-item\">\r\n                                    <div>\r\n                                        <span className=\"tx-13 mb-3\">Closed Projects</span>\r\n                                        <h3 className=\"m-0 mt-2\">10</h3>\r\n                                    </div>\r\n                                    <div className=\"ms-auto mt-auto\">\r\n                                        <i className=\"cf cf-btc\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function WorkAuthorizationInfo() {\r\n    const dispatch = useDispatch()\r\n    const initState = useSelector((state) => state.beneficiary.profileData.workAuthorizationInfo)\r\n    const _id = useSelector((state) => state.beneficiary.profileData.beneficiary.id)\r\n    const [searchParams, _] = useSearchParams()\r\n\r\n    // data setup\r\n\r\n    const [list] = useState({\r\n        group: [\r\n            {\r\n                title: 'Immigration',\r\n                values: [\r\n                    { key: 'Status', value: textValidator(initState?.immigration?.ImmigrationStatusType) },\r\n                    { key: 'Status Exp', value: textValidator(trimDate(initState?.immigration?.StatusExpDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'I-797',\r\n                values: [\r\n                    { key: 'Status', value: textValidator(initState?.i797?.CurrentI797Status) },\r\n                    { key: 'Exp Date', value: textValidator(trimDate(initState?.i797?.CurrentI797ExpirationDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'AOS EAD',\r\n                values: [\r\n                    { key: 'Valid From', value: textValidator(trimDate(initState?.aos_ead?.ValidFrom)) },\r\n                    { key: 'Exp Date', value: textValidator(trimDate(initState?.aos_ead?.ValidTo)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'NIV EAD',\r\n                values: [\r\n                    { key: 'Type', value: textValidator(trimDate(initState?.niv_ead?.EADTypeID)) }, // BEN_PENDING\r\n                    { key: 'Valid From', value: textValidator(trimDate(initState?.niv_ead?.CurrentNIVEADValidFrom)) },\r\n                    { key: 'Exp Date', value: textValidator(trimDate(initState?.niv_ead?.CurrentNIVEADValidTo)) }\r\n                ]\r\n            }\r\n        ]\r\n    })\r\n\r\n    const loadAPI = () => {\r\n        dispatch(actions.setTabLoader({ tab: 'workAuthorizationInfo', status: true }))\r\n        beneficiaryService.getWorkAuthorizationInfo(_id).then((res) => {\r\n            dispatch(actions.setWorkAuthorizationInfo(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('pane') === '5') loadAPI()\r\n    }, [])\r\n\r\n    return initState?.loading ? (\r\n        <SimpleLoader />\r\n    ) : (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body className=\"\">\r\n                <h5 className=\"main-content-label\">Work Authorization Info</h5>\r\n                <Row className=\" row-sm\">\r\n                    {list.group.map((item) => {\r\n                        return (\r\n                            <Col md={6} xl={4} className=\"mb-3\" key={uuidv4()}>\r\n                                <Tile item={item} />\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function BeneficiaryQuickAssessmentForm() {\r\n    const dispatch = useDispatch()\r\n    const formState = useSelector((state) => state.beneficiary.profileData.quickAssessmentForm)\r\n    const _id = useSelector((state) => state.beneficiary.profileData.beneficiary.id)\r\n    const [searchParams, _] = useSearchParams()\r\n\r\n    // data setup\r\n\r\n    const extractData = (leaf) => textValidator(formState?.beneficiary_details?.[leaf], 'NA')\r\n\r\n    const beneficiaryData = {\r\n        title: 'Benificiary Details',\r\n        values: [\r\n            { key: 'Beneficiary Id', value: extractData('BeneficiaryID') },\r\n            { key: 'Employee Id', value: extractData('EmployeeId') },\r\n            { key: 'Employee First Name', value: extractData('FirstName') },\r\n            { key: 'Employee Last Name', value: extractData('LastName') },\r\n            { key: 'Petitioner Name', value: extractData('EmployerName') }\r\n        ]\r\n    }\r\n    const loadAPI = () => {\r\n        dispatch(actions.setTabLoader({ tab: 'quickAssessmentForm', status: true }))\r\n        beneficiaryService.getQuickAssessmentForm(_id).then((res) => {\r\n            dispatch(actions.setQuickAssessmentForm(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('pane') === '2') loadAPI()\r\n    }, [])\r\n\r\n    const list = {\r\n        group: [\r\n            {\r\n                title: 'Immigration',\r\n                values: [\r\n                    { key: 'Status', value: textValidator(formState?.immigration?.ImmigrationStatusType) },\r\n                    { key: 'Status Exp', value: textValidator(trimDate(formState?.immigration?.StatusExpDate)) },\r\n                    {\r\n                        key: 'Future Imm Status Effective Date',\r\n                        value: textValidator(trimDate(formState?.immigration?.FutureImmStatusEffectiveDate))\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'I-797',\r\n                values: [\r\n                    { key: 'Approved Date', value: textValidator(trimDate(formState?.i797?.DecisionNoticeDate)) },\r\n                    { key: 'Status', value: textValidator(formState?.i797?.CurrentI797Status) },\r\n                    { key: 'Valid From', value: textValidator(trimDate(formState?.i797?.DecisionNoticeDate)) },\r\n                    { key: 'Exp Date', value: textValidator(trimDate(formState?.i797?.CurrentI797ExpirationDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'I-129S',\r\n                values: [\r\n                    { key: 'End Date', value: textValidator(trimDate(formState?.i129s?.CurrentI797ExpirationDate)) },\r\n                    { key: 'Requested Date', value: textValidator(trimDate(formState?.i129s?.DecisionNoticeDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'U.S. Entry',\r\n                values: [\r\n                    { key: 'Most Recent Entry Date', value: textValidator(trimDate(formState?.us_entry?.EntryDate)) },\r\n                    { key: 'I-94 Number', value: textValidator(formState?.us_entry?.I94Number) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Visa',\r\n                values: [\r\n                    { key: 'Type', value: textValidator(formState?.visa?.VisaClass) },\r\n                    { key: 'Exp Date', value: textValidator(trimDate(formState?.visa?.ValidTo)) },\r\n                    { key: 'PED', value: textValidator(trimDate(formState?.visa?.VisaPedDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'PR Data',\r\n                values: [\r\n                    {\r\n                        key: 'Re-Entry Permit Exp Date',\r\n                        value: textValidator(trimDate(formState?.pr_data?.ReEntryPermitExpirationDate))\r\n                    },\r\n                    {\r\n                        key: 'Green Card Exp Date',\r\n                        value: textValidator(trimDate(formState?.pr_data?.GreenCardExpirationDate))\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Other',\r\n                values: [\r\n                    {\r\n                        key: 'Final NIV Initial H/L Entry',\r\n                        value: textValidator(trimDate(formState?.other1?.FinalNIVInitialHLEntry))\r\n                    },\r\n                    { key: 'Fifth Year Exp', value: textValidator(trimDate(formState?.other1?.FifthYearExp)) },\r\n                    { key: 'NIV Max Out Date', value: textValidator(trimDate(formState?.other1?.NIVMaxOutDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Other (J-1 Info)',\r\n                values: [\r\n                    {\r\n                        key: 'Subject to TYSH Requirement',\r\n                        value: textValidator(trimDate(formState?.other2?.SubjectToHomeStayRequirement))\r\n                    },\r\n                    {\r\n                        key: 'TYSH Requirement Complied',\r\n                        value: textValidator(trimDate(formState?.other2?.HomeStayRequirementComplied))\r\n                    },\r\n                    {\r\n                        key: 'TYSH Waiver Obtain',\r\n                        value: textValidator(trimDate(formState?.other2?.HomeStayWaiverObtain))\r\n                    },\r\n                    {\r\n                        key: 'DS-2019 Valid To Date',\r\n                        value: textValidator(trimDate(formState?.other2?.['Ds2019ExpirationDate']))\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    const rows = formState?.table?.filter((t) => Object.keys(t).length > 0) || []\r\n\r\n    return formState?.loading ? (\r\n        <SimpleLoader />\r\n    ) : (\r\n        <Card className=\"custom-card static-card beneficiaryQuickAssessment\">\r\n            <Card.Body>\r\n                <h5 className=\"main-content-label\">Beneficiary Quick Assessment Form</h5>\r\n                <Row className=\" row-sm\">\r\n                    <Col md={6} xl={4} className=\"mt-2\">\r\n                        <Tile item={beneficiaryData} />\r\n                    </Col>\r\n\r\n                    <Col md={6} xl={8} className=\"mb-3\">\r\n                        <Table className=\"table text-nowrap text-md-nowrap mg-b-0 border\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <b>Doc Type</b>\r\n                                    </th>\r\n                                    <th>\r\n                                        <b>Exp Date</b>\r\n                                    </th>\r\n                                    <th>\r\n                                        <b>\r\n                                            Ext/Ren\r\n                                            <br />\r\n                                            Initiated\r\n                                        </b>\r\n                                    </th>\r\n                                    <th>\r\n                                        <b>\r\n                                            Project Initiated\r\n                                            <br />\r\n                                            Date\r\n                                        </b>\r\n                                    </th>\r\n                                    <th>\r\n                                        <b>\r\n                                            Secondary Project <br />\r\n                                            Status\r\n                                        </b>\r\n                                    </th>\r\n                                    <th>\r\n                                        <b>Project Id</b>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows.map((item, index) => (\r\n                                    <tr key={index} data-index={index}>\r\n                                        <td>{textValidator(item?.['DocumentType'])}</td>\r\n                                        <td>{textValidator(trimDate(item?.['ExpDate']))}</td>\r\n                                        <td>{textValidator(item?.['ExtRenInitiated'])}</td>\r\n                                        <td>{textValidator(trimDate(item?.['ProjectInitiatedDate']))}</td>\r\n                                        <td>{textValidator(item?.['SecondaryProjectStatus'])}</td>\r\n                                        <td>{textValidator(item?.['ProjectID'])}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"row-sm\">\r\n                    <Col sm={6} md={6}>\r\n                        <Card className=\"custom-card\">\r\n                            <Card.Body>\r\n                                <div>\r\n                                    <h6 className=\"main-content-label mb-1\">Summary</h6>\r\n                                    <p className=\"text-muted card-sub-title\">\r\n                                        The below summary/assessment is based on responses provided by the Beneficiary\r\n                                        and information currently recorded in the system.\r\n                                    </p>\r\n                                    <Card className=\"tx-14\">\r\n                                        <Card.Body>\r\n                                            <ul className=\"mb-0\">\r\n                                                <li>\r\n                                                    The Beneficiary does not have any \"General Eligibility or\r\n                                                    Inadmissibility\" related issues.\r\n                                                </li>\r\n                                                <li>\r\n                                                    The above-named Beneficiary is a __________ Beneficiary\r\n                                                    (Primary/Dependent).{' '}\r\n                                                </li>\r\n                                                <li>\r\n                                                    The Beneficiary is subject to NIV Max Out Date and the date is\r\n                                                    ________.{' '}\r\n                                                </li>\r\n                                                <li>\r\n                                                    The Beneficiary _____ (IS/NOT) eligible to extend his/her NIV status\r\n                                                    for the following reasons:\r\n                                                </li>\r\n                                            </ul>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                                <Card className=\"custom-card mt-3 border\">\r\n                                    <Card.Header className=\"p-3 tx-medium my-auto tx-white bg-primary\">\r\n                                        IS ELIGIBLE TO EXTEND NIV STATUS B/C\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <ul>\r\n                                            <li>Approved I-140 with Current Employer: Yes</li>\r\n                                            <li>Approved I-140 with a subsidiary company of Current Employer: Yes</li>\r\n                                            <li>Approved I-140 from a Prior Employer: Yes</li>\r\n                                        </ul>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm={6} md={6}>\r\n                        <Card className=\"custom-card static-card\">\r\n                            <Card.Body className=\"\">\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <h5 className=\"main-content-label\">Immigration Status & Key Dates</h5>\r\n                                </div>\r\n                                <Row className=\"row-sm\">\r\n                                    {list.group.map((item) => {\r\n                                        return (\r\n                                            <Col md={12} xl={6} className=\"mb-3\" key={uuidv4()}>\r\n                                                <Tile item={item} />\r\n                                            </Col>\r\n                                        )\r\n                                    })}\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function PRProcessInitiationInfo() {\r\n    const dispatch = useDispatch()\r\n\r\n    const initState = useSelector((state) => state.beneficiary.profileData.prProcessInfo)\r\n    const _id = useSelector((state) => state.beneficiary.profileData.beneficiary.id)\r\n    const [searchParams, _] = useSearchParams()\r\n\r\n    const extractData = (leaf) => initState?.[leaf]\r\n\r\n    const loadAPI = () => {\r\n        dispatch(actions.setTabLoader({ tab: 'prProcessInfo', status: true }))\r\n        beneficiaryService.getPRProcessInfo(_id).then((res) => {\r\n            dispatch(actions.setPrProcessInfo(res))\r\n        })\r\n    }\r\n\r\n    const list = {\r\n        group1: [\r\n            {\r\n                title: 'PR Process',\r\n                values: [\r\n                    { key: 'Eligible', value: textValidator(extractData('pr_process')?.IsEligiblePRProcess) },\r\n                    {\r\n                        key: 'Initiated',\r\n                        value: textValidator(extractData('pr_process')?.InitiationStartDate ? true : false)\r\n                    },\r\n                    {\r\n                        key: 'Initiation Date',\r\n                        value: trimDate(textValidator(extractData('pr_process')?.InitiationStartDate))\r\n                    },\r\n                    {\r\n                        key: 'Target Start Date',\r\n                        value: trimDate(textValidator(extractData('pr_process')?.TargetStartDate))\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        group2: [\r\n            {\r\n                title: 'PERM Project',\r\n                values: [\r\n                    {\r\n                        key: 'Filed Date',\r\n                        value: trimDate(textValidator(extractData('perm_project')?.PermProjectFiledDate))\r\n                    },\r\n                    { key: 'Status', value: textValidator(extractData('perm_project')?.ProjectPrimaryStatus) },\r\n                    {\r\n                        key: 'Project ID',\r\n                        value: textValidator(extractData('perm_project')?.PermProjectID),\r\n                        type: 'link'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'I-140',\r\n                values: [\r\n                    {\r\n                        key: 'Filed Date',\r\n                        value: trimDate(textValidator(extractData('i140')?.['I140ProjectFiledDate']))\r\n                    },\r\n                    { key: 'Status', value: textValidator(extractData('i140')?.['ProjectPrimaryStatus']) },\r\n                    { key: 'Project ID', value: textValidator(extractData('i140')?.['I140ProjectID']), type: 'link' }\r\n                ]\r\n            },\r\n            {\r\n                title: 'I-485',\r\n                values: [\r\n                    { key: 'Filed Date', value: trimDate(textValidator(extractData('i485')?.['AOSProjectFiledDate'])) },\r\n                    { key: 'Status', value: textValidator(extractData('i485')?.['ProjectPrimaryStatus']) },\r\n                    { key: 'Project ID', value: textValidator(extractData('i485')?.['AOSProjectID']), type: 'link' }\r\n                ]\r\n            },\r\n            {\r\n                title: 'I-130',\r\n                values: [\r\n                    {\r\n                        key: 'Filed Date',\r\n                        value: trimDate(textValidator(extractData('i130')?.['I130ProjectFiledDate']))\r\n                    },\r\n                    { key: 'Status', value: textValidator(extractData('i130')?.['ProjectPrimaryStatus']) },\r\n                    { key: 'Project ID', value: textValidator(extractData('i130')?.['I130ProjectID']), type: 'link' }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('pane') === '6') {\r\n            loadAPI()\r\n        }\r\n    }, [])\r\n\r\n    return initState.loading ? (\r\n        <SimpleLoader />\r\n    ) : (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body className=\"\">\r\n                <h5 className=\"main-content-label\">PR Process Initiation Info</h5>\r\n                <Row className=\" row-sm\">\r\n                    {list.group1.map((item) => {\r\n                        return (\r\n                            <Col md={6} xl={4} className=\"mb-3\" key={uuidv4()}>\r\n                                <Tile item={item} />\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n                <h5 className=\"main-content-label my-2\">PR Process Status Info</h5>\r\n                <Row className=\" row-sm\">\r\n                    {list.group2.map((item) => {\r\n                        return (\r\n                            <Col md={4} xl={3} className=\"mb-3\" key={uuidv4()}>\r\n                                <Tile item={item} />\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function EmploymentInfo() {\r\n    const dispatch = useDispatch()\r\n    const initState = useSelector((state) => state.beneficiary.profileData.employeeInfo)\r\n    const _id = useSelector((state) => state.beneficiary.profileData.beneficiary.id)\r\n    const [searchParams, _] = useSearchParams()\r\n\r\n    const [list] = useState({\r\n        group: [\r\n            {\r\n                title: '',\r\n                values: [\r\n                    { key: 'Employer Name', value: textValidator(initState?.emp_info_tab1?.EmployerName) },\r\n                    { key: 'Employee ID', value: textValidator(initState?.emp_info_tab1?.EmployeeId) },\r\n                    { key: 'Current Job Title', value: textValidator(initState?.emp_info_tab1?.JobTitle) }\r\n                ]\r\n            },\r\n            {\r\n                title: '',\r\n                values: [\r\n                    {\r\n                        key: 'Works at Multiple Sites?',\r\n                        value: textValidator(initState?.emp_info_tab2?.WorksATMultipleSites)\r\n                    },\r\n                    {\r\n                        key: 'Primary Work Location',\r\n                        value: textValidator(initState?.emp_info_tab2?.PrimaryWorkLocation)\r\n                    },\r\n                    {\r\n                        key: 'Additional Work Locations',\r\n                        value: textValidator(initState?.emp_info_tab2?.AdditionalWorkLocations),\r\n                        type: 'link'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '',\r\n                values: [\r\n                    {\r\n                        key: 'Employment Start Date',\r\n                        value: trimDate(textValidator(initState?.emp_info_tab3?.HireDate))\r\n                    },\r\n                    {\r\n                        key: 'Most Recent LCA Number',\r\n                        value: textValidator(initState?.emp_info_tab3?.MostRecentLCANumber)\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '',\r\n                values: [\r\n                    { key: '', value: '' },\r\n                    { key: '', value: '' },\r\n                    { key: '', value: '', type: '' }\r\n                ]\r\n            },\r\n            {\r\n                title: '',\r\n                values: [\r\n                    { key: '', value: '' },\r\n                    { key: '', value: '' },\r\n                    { key: '', value: '', type: '' }\r\n                ]\r\n            },\r\n            {\r\n                title: '',\r\n                values: [\r\n                    { key: '', value: '' },\r\n                    { key: '', value: '' },\r\n                    { key: '', value: '', type: '' }\r\n                ]\r\n            }\r\n        ]\r\n    })\r\n\r\n    const loadAPI = () => {\r\n        dispatch(actions.setTabLoader({ tab: 'employeeInfo', status: true }))\r\n        beneficiaryService.getEmploymentInfo(_id).then((res) => {\r\n            dispatch(actions.setEmployeeInfo(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('pane') === '8') loadAPI()\r\n    }, [])\r\n\r\n    return initState?.loading ? (\r\n        <SimpleLoader />\r\n    ) : (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body className=\"\">\r\n                <h5 className=\"main-content-label\">Employment Info</h5>\r\n                <Row className=\" row-sm\">\r\n                    {list.group.map((item) => {\r\n                        return (\r\n                            <Col md={6} xl={4} className=\"mb-3 h-185\" key={uuidv4()}>\r\n                                <Tile item={item} />\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function PassportTravel() {\r\n    const dispatch = useDispatch()\r\n    const initState = useSelector((state) => state.beneficiary.profileData.passportTravel)\r\n    const _id = useSelector((state) => state.beneficiary.profileData.beneficiary.id)\r\n    const [searchParams, _] = useSearchParams()\r\n\r\n    const list = {\r\n        group: [\r\n            {\r\n                title: 'Most Recent Travel',\r\n                values: [\r\n                    { key: 'Type', value: textValidator(initState?.most_recent_travel?.TravelType) },\r\n                    { key: 'Date', value: trimDate(textValidator(initState?.most_recent_travel?.TravelStartDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Passport',\r\n                values: [\r\n                    { key: 'Number', value: textValidator(initState?.passport?.PassportNumber) },\r\n                    { key: 'Issuing Country', value: textValidator(initState?.passport?.IssuenceCountry) },\r\n                    { key: 'Exp Date', value: trimDate(textValidator(initState?.passport?.ValidTo)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Visa',\r\n                values: [\r\n                    { key: 'Type', value: textValidator(initState?.visa?.VisaType) },\r\n                    { key: 'Exp Date', value: trimDate(textValidator(initState?.visa?.ValidTo)) },\r\n                    { key: 'Advance Parole Exp Date', value: trimDate(textValidator(initState?.visa?.ParoleExpDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Travel Document',\r\n                values: [\r\n                    { key: 'Issuing Country', value: textValidator(initState?.travel_document?.IssuingCountry) },\r\n                    { key: 'Exp Date', value: trimDate(textValidator(initState?.travel_document?.I94ExpirationDate)) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Upcoming Travel',\r\n                values: [\r\n                    {\r\n                        key: 'Tentive Departure Date',\r\n                        value: trimDate(textValidator(initState?.upcoming_travel?.TentativeDepartureDate))\r\n                    },\r\n                    {\r\n                        key: 'Tentive Arrival Date',\r\n                        value: trimDate(textValidator(initState?.upcoming_travel?.TentativeArrivalDate))\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    const loadAPI = () => {\r\n        dispatch(actions.setTabLoader({ tab: 'passportTravel', status: true }))\r\n        beneficiaryService.getPassportTravel(_id).then((res) => {\r\n            dispatch(actions.setPassportTravel(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('pane') === '9') loadAPI()\r\n    }, [])\r\n\r\n    return initState?.loading ? (\r\n        <SimpleLoader />\r\n    ) : (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body className=\"\">\r\n                <h5 className=\"main-content-label\">Passport & Travel</h5>\r\n                <Row className=\" row-sm\">\r\n                    {list.group.map((item) => {\r\n                        return (\r\n                            <Col md={6} xl={4} className=\"mb-3 h-185\" key={uuidv4()}>\r\n                                <Tile item={item} />\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function PersonalData() {\r\n    const dispatch = useDispatch()\r\n    const initState = useSelector((state) => state.beneficiary.profileData.personalInfo)\r\n    const _id = useSelector((state) => state.beneficiary.profileData.beneficiary.id)\r\n    const [searchParams, _] = useSearchParams()\r\n\r\n    const list = {\r\n        group: [\r\n            {\r\n                title: 'Birth Info',\r\n                values: [\r\n                    { key: 'Date of Birth', value: trimDate(textValidator(initState?.birth_info?.BirthDate)) },\r\n                    { key: 'City of Birth', value: textValidator(initState?.birth_info?.BirthCity) },\r\n                    { key: 'State of Birth', value: textValidator(initState?.birth_info?.BirthStateProvince) },\r\n                    { key: 'Country of Birth', value: textValidator(initState?.birth_info?.BirthCountry) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Citizenship',\r\n                values: [\r\n                    { key: 'Primary Country', value: textValidator(initState?.citizenship?.PermPriorityCountry) },\r\n                    { key: 'Other Countries', value: textValidator(initState?.citizenship?.CitizenshipCountry) },\r\n                    {\r\n                        key: 'Country(ies) of Citizenship',\r\n                        value: textValidator(initState?.citizenship?.AllCitizenshipCountries)\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Marital Status',\r\n                values: [\r\n                    { key: 'Marital Status', value: textValidator(initState?.marital_status?.MaritalStatus) },\r\n                    { key: 'Date of Marriage', value: textValidator(initState?.marital_status?.MarriageDate) },\r\n                    { key: 'Date of Divorce', value: textValidator(initState?.marital_status?.DateofDivorce) },\r\n                    { key: 'Number of Dependents', value: textValidator(initState?.marital_status?.NumberofDependents) }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Contact Info',\r\n                values: [\r\n                    { key: 'Primary Email', value: textValidator(initState?.contact_info?.PersonalEmail) },\r\n                    { key: 'Secondary Email', value: textValidator(initState?.contact_info?.WorkEmail) },\r\n                    { key: 'Home Phone', value: textValidator(initState?.contact_info?.HomePhone) },\r\n                    { key: 'Work Phone', value: textValidator(initState?.contact_info?.WorkPhone) },\r\n                    { key: 'Mobile Phone', value: textValidator(initState?.contact_info?.Mobile) }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    const loadAPI = () => {\r\n        dispatch(actions.setTabLoader({ tab: 'personalInfo', status: true }))\r\n        beneficiaryService.getPersonalInfo(_id).then((res) => {\r\n            dispatch(actions.setPersonalInfo(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('pane') === '10') loadAPI()\r\n    }, [])\r\n\r\n    return initState?.loading ? (\r\n        <SimpleLoader />\r\n    ) : (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body className=\"\">\r\n                <h5 className=\"main-content-label\">Personal Info</h5>\r\n                <Row className=\" row-sm\">\r\n                    {list.group.map((item) => {\r\n                        return (\r\n                            <Col md={6} xl={4} className=\"mb-3 h-185\" key={uuidv4()}>\r\n                                <Tile item={item} />\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function PriorityData() {\r\n    const dispatch = useDispatch()\r\n\r\n    const initState = useSelector((state) => state.beneficiary.profileData.prPriorityInfo)\r\n    const _id = useSelector((state) => state.beneficiary.profileData.beneficiary.id)\r\n    const [searchParams, _] = useSearchParams()\r\n\r\n    const tableData = initState?.priority_info_table || []\r\n\r\n    const list = {\r\n        group: [\r\n            {\r\n                title: 'AOS Filing Status',\r\n                values: [\r\n                    {\r\n                        key: 'Filed Date',\r\n                        value: textValidator(trimDate(initState?.aos_filing_status?.ProjectFiledDate))\r\n                    },\r\n                    {\r\n                        key: 'Primart Project Status',\r\n                        value: textValidator(trimDate(initState?.aos_filing_status?.ProjectPrimaryStatus))\r\n                    },\r\n                    {\r\n                        key: 'Secondary Project Status',\r\n                        value: textValidator(trimDate(initState?.aos_filing_status?.ProjectSecondaryStatusID))\r\n                    },\r\n                    { key: 'AOS Project ID', value: textValidator(trimDate(initState?.aos_filing_status?.ProjectID)) },\r\n                    { key: 'Link', value: 'icon link', type: 'link' }\r\n                ]\r\n            },\r\n            {\r\n                title: 'AOS Filing Eligibility- Current',\r\n                values: [\r\n                    {\r\n                        key: 'Month',\r\n                        value: textValidator(trimDate(initState?.aos_filing_eligibility_current?.FilingMonth))\r\n                    },\r\n                    {\r\n                        key: 'Visa Bulletin URL',\r\n                        value: 'https://travel.state.gov/content/travel/en/legal/visa-law0/visa-bulletin/2023/visa-bulletin-for-march-2023.html',\r\n                        type: 'link'\r\n                    },\r\n                    {\r\n                        key: 'Final Action',\r\n                        value: textValidator(trimDate(initState?.aos_filing_eligibility_current?.FinalAction))\r\n                    },\r\n                    {\r\n                        key: 'Dates for Filing',\r\n                        value: textValidator(trimDate(initState?.aos_filing_eligibility_current?.FilingDate))\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'AOS Filing Eligibility- Upcoming',\r\n                values: [\r\n                    {\r\n                        key: 'Month ',\r\n                        value: textValidator(trimDate(initState?.aos_filing_eligibility_upcoming?.FilingMonth))\r\n                    },\r\n                    {\r\n                        key: 'Visa Bulletin URL',\r\n                        value: 'https://travel.state.gov/content/travel/en/legal/visa-law0/visa-bulletin/2023/visa-bulletin-for-april-2023.html',\r\n                        type: 'link'\r\n                    },\r\n                    {\r\n                        key: 'Final Action',\r\n                        value: textValidator(trimDate(initState?.aos_filing_eligibility_upcoming?.FilingMonth))\r\n                    },\r\n                    {\r\n                        key: 'Dates for Filing',\r\n                        value: textValidator(trimDate(initState?.aos_filing_eligibility_upcoming?.FilingMonth))\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    const loadAPI = () => {\r\n        dispatch(actions.setTabLoader({ tab: 'prProcessInfo', status: true }))\r\n        beneficiaryService.getPriorityInfo(_id).then((res) => {\r\n            dispatch(actions.setPrPriorityInfo(res))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('pane') === '7') {\r\n            loadAPI()\r\n        }\r\n    }, [])\r\n\r\n    return initState.loading ? (\r\n        <SimpleLoader />\r\n    ) : (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body className=\"priority-info-card\">\r\n                <h5 className=\"main-content-label\">Priority Info</h5>\r\n                <Row className=\" row-sm\">\r\n                    {list.group.map((item) => {\r\n                        return (\r\n                            <Col md={6} xl={4} className=\"mb-3 h-185\" key={uuidv4()}>\r\n                                <Tile item={item} key={uuidv4()} />\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n                <Row className=\"row-sm table-row\">\r\n                    <Table border={1}>\r\n                        <thead>\r\n                            <th>Project Type</th>\r\n                            <th>Is Most Recent</th>\r\n                            <th>Is Prior Employer I-140</th>\r\n\r\n                            <th>Petitioner Name</th>\r\n                            <th>Sponser Name</th>\r\n                            <th>Priority Date</th>\r\n\r\n                            <th>Priority Category</th>\r\n                            <th>Priority Country</th>\r\n                            <th>Underlying PERM Project No</th>\r\n                            <th>Project Receipt No</th>\r\n\r\n                            <th>Project Status</th>\r\n                            <th>Project Created Date</th>\r\n                            <th>Project ID / Link</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableData.map((tr) => (\r\n                                <tr>\r\n                                    <td>{textValidator(tr.ProjectType)}</td>\r\n                                    <td>{textValidator(tr?.ISMostRecent)}</td>\r\n                                    <td>{textValidator(tr?.isPriorEmployer)}</td>\r\n\r\n                                    <td>{textValidator(tr?.ProjectPetitionName)}</td>\r\n                                    <td>{textValidator(tr?.SponserName)}</td>\r\n                                    <td>{trimDate(textValidator(tr?.ProjectPriorityDate))}</td>\r\n\r\n                                    <td>{textValidator(tr?.ProjectPriorityCategory)}</td>\r\n                                    <td>{textValidator(tr?.ProjectPriorityCountry)}</td>\r\n                                    <td>{textValidator(tr?.UnderlyingPermReceiptNumber)}</td>\r\n                                    <td>{textValidator(tr?.ReceiptNumber)}</td>\r\n\r\n                                    <td>{textValidator(tr?.ProjectPrimaryStatus)}</td>\r\n                                    <td>{trimDate(textValidator(tr?.CreatedDate))}</td>\r\n                                    <td>\r\n                                        <a href=\"https://google.com\" rel=\"noreferrer\" target={'_blank'}>\r\n                                            A54154785A\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function DMSWorkspaceLink() {\r\n    return (\r\n        <Card className=\"custom-card static-card\">\r\n            <Card.Body className=\"\">\r\n                <h5 className=\"main-content-label\">DMS Workspace Link</h5>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n"],"names":["textValidator","value","defaultValue","arguments","length","undefined","trimDate","toString","replaceAll","Tile","_ref","item","_jsxs","className","children","_jsx","title","values","map","key","type","href","rel","target","uuidv4","BeneficiaryImmigrationTimeline","dispatch","useDispatch","immigrationTimelineState","useSelector","state","beneficiary","profileData","immigrationTimeline","_id","id","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","extractData","leaf","stepswizard","_objectSpread","name","useEffect","get","actions","tab","status","beneficiaryService","then","res","_useState","useState","activeStep","StepDetails","_ref2","data","set","ProjectID","projectLink","concat","YearInitiated","YearFiled","YearClosed","ProjectPrimaryStatus","Link","to","CustomStepLabel","styled","StepLabel","_ref3","_$concat2","index","_defineProperty","stepLabelClasses","flexDirection","marginBottom","loading","SimpleLoader","Card","Stepper","connector","alternativeLabel","step","Step","style","height","StepIconComponent","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","backgroundColor","onMouseEnter","event","currentTarget","onMouseLeave","Check","Popover","sx","pointerEvents","onClose","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","ImmigrationStatusKeyDates","_initState$immigratio","_initState$immigratio2","_initState$i","_initState$i2","_initState$i3","_initState$i4","_initState$i129s","_initState$i129s2","_initState$us_entry","_initState$us_entry2","_initState$visa","_initState$visa2","_initState$visa3","_initState$pr_data","_initState$pr_data2","initState","immigrationStatusKeyDates","_useSearchParams3","_useSearchParams4","list","group","immigration_status","ImmigrationStatusType","StatusExpDate","i797","DecisionNoticeDate","CurrentI797Status","CurrentI797ExpirationDate","i129s","us_entry","EntryDate","I94Number","visa","VisaClass","ValidTo","VisaPedDate","pr_data","PermitExpDate","GreenCardExpDate","Row","Col","md","xl","OpenCases","navigate","useNavigate","handleRedirect","page","caseType","bg","onClick","WorkAuthorizationInfo","_initState$immigratio3","_initState$immigratio4","_initState$i5","_initState$i6","_initState$aos_ead","_initState$aos_ead2","_initState$niv_ead","_initState$niv_ead2","_initState$niv_ead3","workAuthorizationInfo","_useSearchParams5","_useSearchParams6","_useState3","immigration","aos_ead","ValidFrom","niv_ead","EADTypeID","CurrentNIVEADValidFrom","CurrentNIVEADValidTo","BeneficiaryQuickAssessmentForm","_formState$immigratio","_formState$immigratio2","_formState$immigratio3","_formState$i","_formState$i2","_formState$i3","_formState$i4","_formState$i129s","_formState$i129s2","_formState$us_entry","_formState$us_entry2","_formState$visa","_formState$visa2","_formState$visa3","_formState$pr_data","_formState$pr_data2","_formState$other","_formState$other2","_formState$other3","_formState$other4","_formState$other5","_formState$other6","_formState$other7","_formState$table","formState","quickAssessmentForm","_useSearchParams7","_useSearchParams8","_formState$beneficiar","beneficiary_details","beneficiaryData","FutureImmStatusEffectiveDate","ReEntryPermitExpirationDate","GreenCardExpirationDate","other1","FinalNIVInitialHLEntry","FifthYearExp","NIVMaxOutDate","other2","SubjectToHomeStayRequirement","HomeStayRequirementComplied","HomeStayWaiverObtain","rows","table","filter","t","Object","keys","Table","sm","PRProcessInitiationInfo","_extractData","_extractData2","_extractData3","_extractData4","_extractData5","_extractData6","_extractData7","_extractData8","_extractData9","_extractData10","_extractData11","_extractData12","_extractData13","_extractData14","_extractData15","_extractData16","prProcessInfo","_useSearchParams9","_useSearchParams10","group1","IsEligiblePRProcess","InitiationStartDate","TargetStartDate","group2","PermProjectFiledDate","PermProjectID","EmploymentInfo","_initState$emp_info_t","_initState$emp_info_t2","_initState$emp_info_t3","_initState$emp_info_t4","_initState$emp_info_t5","_initState$emp_info_t6","_initState$emp_info_t7","_initState$emp_info_t8","employeeInfo","_useSearchParams11","_useSearchParams12","_useState5","emp_info_tab1","EmployerName","EmployeeId","JobTitle","emp_info_tab2","WorksATMultipleSites","PrimaryWorkLocation","AdditionalWorkLocations","emp_info_tab3","HireDate","MostRecentLCANumber","PassportTravel","_initState$most_recen","_initState$most_recen2","_initState$passport","_initState$passport2","_initState$passport3","_initState$visa4","_initState$visa5","_initState$visa6","_initState$travel_doc","_initState$travel_doc2","_initState$upcoming_t","_initState$upcoming_t2","passportTravel","_useSearchParams13","_useSearchParams14","most_recent_travel","TravelType","TravelStartDate","passport","PassportNumber","IssuenceCountry","VisaType","ParoleExpDate","travel_document","IssuingCountry","I94ExpirationDate","upcoming_travel","TentativeDepartureDate","TentativeArrivalDate","PersonalData","_initState$birth_info","_initState$birth_info2","_initState$birth_info3","_initState$birth_info4","_initState$citizenshi","_initState$citizenshi2","_initState$citizenshi3","_initState$marital_st","_initState$marital_st2","_initState$marital_st3","_initState$marital_st4","_initState$contact_in","_initState$contact_in2","_initState$contact_in3","_initState$contact_in4","_initState$contact_in5","personalInfo","_useSearchParams15","_useSearchParams16","birth_info","BirthDate","BirthCity","BirthStateProvince","BirthCountry","citizenship","PermPriorityCountry","CitizenshipCountry","AllCitizenshipCountries","marital_status","MaritalStatus","MarriageDate","DateofDivorce","NumberofDependents","contact_info","PersonalEmail","WorkEmail","HomePhone","WorkPhone","Mobile","PriorityData","_initState$aos_filing","_initState$aos_filing2","_initState$aos_filing3","_initState$aos_filing4","_initState$aos_filing5","_initState$aos_filing6","_initState$aos_filing7","_initState$aos_filing8","_initState$aos_filing9","_initState$aos_filing10","prPriorityInfo","_useSearchParams17","_useSearchParams18","tableData","priority_info_table","aos_filing_status","ProjectFiledDate","ProjectSecondaryStatusID","aos_filing_eligibility_current","FilingMonth","FinalAction","FilingDate","aos_filing_eligibility_upcoming","border","tr","ProjectType","ISMostRecent","isPriorEmployer","ProjectPetitionName","SponserName","ProjectPriorityDate","ProjectPriorityCategory","ProjectPriorityCountry","UnderlyingPermReceiptNumber","ReceiptNumber","CreatedDate","DMSWorkspaceLink"],"sourceRoot":""}