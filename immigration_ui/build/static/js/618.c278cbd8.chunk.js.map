{"version":3,"file":"static/js/618.c278cbd8.chunk.js","mappings":"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","sources":["services/login.service.js","Authentication/Login.js","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import { api } from \"config/axiosConfig\";\r\n\r\nexport const loginService = {\r\n    signIn: ({ username, password }) => {\r\n        return api.request({\r\n            url: \"/signin\",\r\n            method: \"GET\",\r\n            auth: {\r\n                username,\r\n                password,\r\n            },\r\n        });\r\n    },\r\n};\r\n","import jwt from 'jwt-decode'\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { Alert, Button, Card, Col, Container, Form, Row, Spinner } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport { loginService } from \"services/login.service\"\r\nimport { setAppUser } from \"store/slices/userSlice\"\r\nimport validator from \"hooks/tokenValidation\"\r\n\r\n/* --------------------------------- Login Component --------------------------------- */\r\n\r\nconst SignIn = () => {\r\n\r\n    /* ------------------------------ Hooks ----------------------------- */\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const SuccessCheck = () => <i className=\"fa fa-check\"></i>\r\n    const FailedCheck = () => <i className=\"fa fa-times\"></i>\r\n\r\n    const appUser = useSelector((state) => {\r\n        return state[\"app-user\"]\r\n    })\r\n\r\n    const [err, setError] = useState(\"\")\r\n    const [data, setData] = useState({\r\n        email: \"tony@immilytics.com\",\r\n        password: \"password\",\r\n        alert: {\r\n            status: \"loading\",\r\n            class: \"\",\r\n            message: \"\",\r\n        },\r\n    })\r\n\r\n    const tokenRevalidate = () => {\r\n\r\n        if (appUser && appUser.token && validator(appUser.token))\r\n            return true\r\n\r\n        return false\r\n    }\r\n\r\n    /* ------------------------- onInit ------------------------ */\r\n\r\n    useEffect(() => {\r\n\r\n        if (tokenRevalidate()) {\r\n\r\n            if (appUser && appUser.usertype === 'Beneficiary')\r\n                navigate(\"/beneficiary/\")\r\n            else\r\n                navigate(\"/dashboard/\")\r\n        }\r\n\r\n    }, [])\r\n\r\n    /* ---------------------------------- Methods ---------------------------------- */\r\n\r\n    const routeChange = (token) => {\r\n\r\n        const user = jwt(token)\r\n\r\n        let path\r\n\r\n        if (user && user.usertype === 'Beneficiary')\r\n            path = `${process.env.PUBLIC_URL}/beneficiary/`\r\n        else\r\n            path = `${process.env.PUBLIC_URL}/dashboard/`\r\n\r\n        setTimeout(() => navigate(path), 600)\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        setData((prev) => ({\r\n            ...prev,\r\n            alert: {\r\n                status: \"loading\",\r\n                class: \"primary\",\r\n                message: \"Signing in...\",\r\n            },\r\n        }))\r\n\r\n        loginService\r\n            .signIn({\r\n                username: data.email,\r\n                password: data.password,\r\n            })\r\n            .then((res) => {\r\n\r\n                if (res.data.token && validator(res.data.token)) {\r\n\r\n                    dispatch(setAppUser(res.data.token))\r\n\r\n                    setData((prev) => ({\r\n                        ...prev,\r\n                        alert: {\r\n                            status: \"success\",\r\n                            class: \"success\",\r\n                            message: \"Login Success\",\r\n                        },\r\n                    }))\r\n                    routeChange(res.data.token)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                // console.log(err)\r\n                setData((prev) => ({\r\n                    ...prev,\r\n                    alert: {\r\n                        status: \"failed\",\r\n                        class: \"danger\",\r\n                        message: \"Login Failed - \" + err.response?.data?.Error,\r\n                    },\r\n                }))\r\n\r\n            })\r\n    }\r\n\r\n    const changeHandler = (e) => {\r\n        setData({ ...data, [e.target.name]: e.target.value })\r\n        setError(\"\")\r\n    }\r\n\r\n    const LoginAlert = () => {\r\n\r\n        const StatusIcon = () => {\r\n            switch (data.alert.status) {\r\n                case \"loading\":\r\n                    return (\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"visually-hidden\"></span>\r\n                        </Spinner>\r\n                    )\r\n                case \"success\":\r\n                    return <SuccessCheck />\r\n                case \"failed\":\r\n                    return <FailedCheck />\r\n                default:\r\n                    return <FailedCheck />\r\n            }\r\n        }\r\n\r\n        if (data.alert.message)\r\n            return (\r\n                <Alert className={`login-alert alert alert-${data.alert.class} text-start`} role=\"alert\">\r\n                    <StatusIcon />\r\n                    {data.alert.message}\r\n                </Alert>\r\n            )\r\n    }\r\n\r\n    /* ---------------------------- Render ---------------------------- */\r\n\r\n    return (\r\n        <>\r\n            <Fragment>\r\n                {/* <!-- Row --> */}\r\n                <div className=\"page main-signin-wrapper\">\r\n                    <Row className=\"signpages text-center\">\r\n                        <Col md={12}>\r\n                            <Card>\r\n                                <Row className=\"row-sm\">\r\n                                    <Col lg={6} xl={5} className=\"d-none d-lg-block text-center bg-primary\">\r\n                                        <div className=\"mt-5 pt-5\">\r\n                                            <img src={require(\"assets/img/logo.jpg\")} className=\"header-brand-img mb-4 p-4 bg-white rounded\" alt=\"logo-light\" />\r\n                                            <h5 className=\"mt-4 text-white\">Create Your Account</h5>\r\n                                            <span className=\"tx-white-6 tx-13 mb-5 mt-xl-0\">Signup to create, discover and connect with the global community</span>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col lg={6} xl={7} xs={12} sm={12} className=\"login_form \">\r\n                                        <Container fluid>\r\n                                            <Row className=\"row-sm\">\r\n                                                <Card.Body className=\"mt-2 mb-2\">\r\n                                                    <div className=\"clearfix\"></div>\r\n                                                    {err && <Alert variant=\"danger\">{err}</Alert>}\r\n                                                    <Form onSubmit={(e) => e.preventDefault()}>\r\n                                                        <h5 className=\"text-start mb-2\">Signin to Your Account</h5>\r\n                                                        <p className=\"mb-4 text-muted tx-13 ms-0 text-start\">Signin to create, discover and connect with the global community</p>\r\n                                                        <LoginAlert />\r\n                                                        <Form.Group className=\"text-start form-group\" controlId=\"formEmail\">\r\n                                                            <Form.Label>Email</Form.Label>\r\n                                                            <Form.Control className=\"form-control\" placeholder=\"Enter your email\" name=\"email\" type=\"text\" value={data.email} onChange={changeHandler} required />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group className=\"text-start form-group\" controlId=\"formpassword\">\r\n                                                            <Form.Label>Password</Form.Label>\r\n                                                            <Form.Control className=\"form-control\" placeholder=\"Enter your password\" name=\"password\" type=\"password\" value={data.password} onChange={changeHandler} required />\r\n                                                        </Form.Group>\r\n                                                        <Button type=\"submit\" onClick={() => handleLogin()} className=\"btn ripple btn-main-primary btn-block mt-2\">\r\n                                                            Sign In\r\n                                                        </Button>\r\n                                                    </Form>\r\n                                                    <div className=\"text-start mt-5 ms-0\">\r\n                                                        <div className=\"mb-1\">\r\n                                                            <Link to=\"#\"> Forgot password ?</Link>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            Don't have an account?\r\n                                                            <Link to={`${process.env.PUBLIC_URL}/authentication/signup`}> Resgister Here</Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Card.Body>\r\n                                            </Row>\r\n                                        </Container>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                {/* <!-- End Row --> */}\r\n            </Fragment>\r\n        </>\r\n    )\r\n}\r\n\r\nSignIn.propTypes = {}\r\n\r\nSignIn.defaultProps = {}\r\n\r\nexport default SignIn\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;"],"names":["loginService","_ref","username","password","api","url","method","auth","SignIn","dispatch","useDispatch","navigate","useNavigate","SuccessCheck","_jsx","className","FailedCheck","appUser","useSelector","state","_useState","useState","_useState2","_slicedToArray","err","setError","_useState3","email","alert","status","class","message","_useState4","data","setData","useEffect","token","validator","usertype","handleLogin","prev","_objectSpread","then","res","setAppUser","path","user","jwt","concat","process","setTimeout","routeChange","catch","_err$response","_err$response$data","response","Error","changeHandler","e","_defineProperty","target","name","value","LoginAlert","StatusIcon","Spinner","animation","role","children","_jsxs","Alert","_Fragment","Fragment","Row","Col","md","Card","lg","xl","src","require","alt","xs","sm","Container","fluid","variant","Form","onSubmit","preventDefault","controlId","placeholder","type","onChange","required","Button","onClick","Link","to","defaultProps","React","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","suffix","classNames","displayName"],"sourceRoot":""}