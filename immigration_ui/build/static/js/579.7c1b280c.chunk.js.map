{"version":3,"file":"static/js/579.7c1b280c.chunk.js","mappings":"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","sources":["components/Common/CustomTile.js","components/Common/Permission.js","components/Dashboard/GraphData.js","config/constants.js","components/Dashboard/UserDashboard.js","services/dashboard.service.js","components/Common/FullScreenLoader/index.js","components/Dashboard/Dashboard.js"],"sourcesContent":["import React from 'react'\r\nimport { Badge, Card } from \"react-bootstrap\"\r\nimport { v4 as uuid } from 'uuid'\r\nimport './CustomTile.scss'\r\n\r\nconst CustomTile = ({ initialState }) => {\r\n\r\n    if (!initialState)\r\n        return null\r\n\r\n    const TileData = ({ values, type }) => {\r\n\r\n        return values.map((value) => {\r\n\r\n            return type === 'label' ? <h5 key={uuid()} className=\"tile-label\">{value}</h5> : <h3 key={uuid()} className=\"badge-mark\"><Badge bg=\"dark\">{value}</Badge></h3>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card className=\"custom-card\">\r\n            <Card.Body>\r\n                <div className=\"card-item\">\r\n                    <div className=\"custom-tile\">\r\n\r\n                        {initialState.columns.map(column => {\r\n\r\n                            return <div className=\"tile-content bg-transparent\" key={uuid()}>\r\n                                <h5 className=\"main-content-label\">{column.title}</h5>\r\n                                <span className=\"tile-description\">\r\n                                    {column.description !== undefined ? column.description : ''}\r\n                                </span>\r\n                                <div className=\"tile-body\">\r\n                                    <div className=\"labels\">\r\n                                        <TileData type='label' values={column.labels} />\r\n                                    </div>\r\n                                    <div className=\"values\">\r\n                                        <TileData type='value' values={column.values} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        })}\r\n\r\n                    </div>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CustomTile","import { useSelector } from \"react-redux\"\r\n\r\nconst Permission = ({ allowedRoles, disallowedRoles, children }) => {\r\n    // attorney\r\n    // beneficiary\r\n    // paralegal\r\n    // hr\r\n    // gm\r\n\r\n    const appUser = useSelector((state) => {\r\n        return state['app-user']\r\n    })\r\n\r\n    const current_user = { permission: appUser?.usertype?.toUpperCase() };\r\n    \r\n    // console.log(current_user)\r\n\r\n    if (\r\n        allowedRoles?.includes(current_user.permission) ||\r\n        (!disallowedRoles?.includes(current_user.permission) &&\r\n            !allowedRoles?.length)\r\n    )\r\n        return children;\r\n};\r\n\r\nexport { Permission };","import { ArcElement, LineElement, BarElement, PointElement, BarController, BubbleController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, ScatterController, CategoryScale, LinearScale, LogarithmicScale, RadialLinearScale, TimeScale, TimeSeriesScale, Decimation, Filler, Legend, Title, Tooltip, SubTitle, } from \"chart.js\"\r\nimport { Chart as ChartJS } from \"chart.js\"\r\n\r\nChartJS.register(\r\n    ArcElement, LineElement, BarElement, PointElement, BarController, BubbleController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, ScatterController, CategoryScale, LinearScale, LogarithmicScale, RadialLinearScale, TimeScale, TimeSeriesScale, Decimation, Filler, Legend, Title, Tooltip, SubTitle)\r\n\r\n// ------------ Dashboard Graphs ------------\r\n\r\nconst allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\nexport const loadFiledData = ({ previous_filed, this_filed }) => {\r\n\r\n    let previous_filed_data = previous_filed.map(x => x.TotalCount)\r\n    let this_filed_data = this_filed.map(x => x.TotalCount)\r\n\r\n    return {\r\n        labels: allMonths,\r\n        datasets: [\r\n            {\r\n                label: \"2023\",\r\n                data: this_filed_data,\r\n                borderWidth: 3,\r\n                backgroundColor: \"transparent\",\r\n                borderColor: \"#6259ca\",\r\n                pointBackgroundColor: \"ffffff\",\r\n                pointRadius: 0,\r\n                type: \"line\",\r\n                tension: 0.4,\r\n            },\r\n            {\r\n                label: \"2022\",\r\n                data: previous_filed_data,\r\n                borderWidth: 3,\r\n                backgroundColor: \"transparent\",\r\n                borderColor: \"rgb(183, 179, 220,0.5)\",\r\n                pointBackgroundColor: \"#ffffff\",\r\n                pointRadius: 0,\r\n                type: \"line\",\r\n                borderDash: [7, 3],\r\n                tension: 0.3,\r\n            },\r\n        ],\r\n    }\r\n}\r\n\r\nexport const loadInitiatedData = ({ previous_initiated, this_initiated }) => {\r\n\r\n    let previous_initiated_data = previous_initiated.map(x => x.TotalCount)\r\n    let this_initiated_data = this_initiated.map(x => x.TotalCount)\r\n\r\n    return {\r\n        labels: allMonths,\r\n        datasets: [\r\n            {\r\n                label: \"2023\",\r\n                data: this_initiated_data,\r\n                borderWidth: 3,\r\n                backgroundColor: \"transparent\",\r\n                borderColor: \"#01b8ff\",\r\n                pointBackgroundColor: \"ffffff\",\r\n                pointRadius: 0,\r\n                type: \"line\",\r\n                tension: 0.4,\r\n            },\r\n            {\r\n                label: \"2022\",\r\n                data: previous_initiated_data,\r\n                borderWidth: 3,\r\n                backgroundColor: \"transparent\",\r\n                borderColor: \"rgb(183, 179, 220,0.5)\",\r\n                pointBackgroundColor: \"#ffffff\",\r\n                pointRadius: 0,\r\n                type: \"line\",\r\n                borderDash: [7, 3],\r\n                tension: 0.3,\r\n            },\r\n        ],\r\n    }\r\n}\r\n\r\n\r\nexport const caseFiledOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n\r\n    plugins: {\r\n        title: {\r\n            display: true,\r\n        },\r\n        legend: {\r\n            position: \"top\",\r\n            display: true,\r\n        },\r\n        tooltip: {\r\n            enabled: true,\r\n        }\r\n    },\r\n    scales: {\r\n        x: {\r\n            ticks: {\r\n                fontColor: \"#c8ccdb\",\r\n            },\r\n            barPercentage: 0.7,\r\n            display: true,\r\n            grid: {\r\n                borderColor: 'rgba(119, 119, 142, 0.2)',\r\n            }\r\n        },\r\n        y: {\r\n            display: true,\r\n            grid: {\r\n                borderColor: 'rgba(119, 119, 142, 0.2)',\r\n            },\r\n            scaleLabel: {\r\n                display: true,\r\n                labelString: 'Thousands',\r\n                fontColor: 'transparent'\r\n            }\r\n        }\r\n    },\r\n    interaction: {\r\n        intersect: false,\r\n    },\r\n}\r\n\r\nexport const caseInitiatedData = {\r\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    datasets: [\r\n        {\r\n            label: \"2023\",\r\n            data: [32, 38, 43],\r\n            borderWidth: 3,\r\n            backgroundColor: \"transparent\",\r\n            borderColor: \"#01b8ff\",\r\n            pointBackgroundColor: \"ffffff\",\r\n            pointRadius: 0,\r\n            type: \"line\",\r\n            tension: 0.4,\r\n        },\r\n        {\r\n            label: \"2022\",\r\n            data: [30, 35, 40,\r\n                45, 47, 48,\r\n                50, 52, 53,\r\n                55, 60, 65],\r\n            borderWidth: 3,\r\n            backgroundColor: \"transparent\",\r\n            borderColor: \"rgb(183, 179, 220,0.5)\",\r\n            pointBackgroundColor: \"#ffffff\",\r\n            pointRadius: 0,\r\n            type: \"line\",\r\n            borderDash: [7, 3],\r\n            tension: 0.3,\r\n        },\r\n    ],\r\n}\r\nexport const caseInitiatedOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n\r\n    plugins: {\r\n        title: {\r\n            display: true,\r\n        },\r\n        legend: {\r\n            position: \"top\",\r\n            display: true,\r\n        },\r\n        tooltip: {\r\n            enabled: true,\r\n        }\r\n    },\r\n    scales: {\r\n        x: {\r\n            ticks: {\r\n                fontColor: \"#c8ccdb\",\r\n            },\r\n            barPercentage: 0.7,\r\n            display: true,\r\n            grid: {\r\n                borderColor: 'rgba(119, 119, 142, 0.2)',\r\n            }\r\n        },\r\n        y: {\r\n            display: true,\r\n            grid: {\r\n                borderColor: 'rgba(119, 119, 142, 0.2)',\r\n            },\r\n            scaleLabel: {\r\n                display: true,\r\n                labelString: 'Thousands',\r\n                fontColor: 'transparent'\r\n            }\r\n        }\r\n    },\r\n    interaction: {\r\n        intersect: false,\r\n    },\r\n}","export const ATTORNEY = \"ATTORNEY\";\r\nexport const BENEFICIARY = \"BENEFICIARY\";\r\nexport const PARALEGAL = \"PARALEGAL\";\r\nexport const HR = \"HR\";\r\n","import CustomTile from 'components/Common/CustomTile'\r\nimport { Badge, Button, Card, Col, Dropdown, ListGroup, Row } from 'react-bootstrap'\r\nimport { Permission } from 'components/Common/Permission'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { Line } from 'react-chartjs-2'\r\nimport * as edashboard from './GraphData'\r\nimport { ATTORNEY, BENEFICIARY, PARALEGAL } from 'config/constants'\r\n\r\nconst OverviewTiles = ({ totalProjects, petitioner, beneficiary }) => {\r\n    const _totalProjects = {\r\n        columns: [\r\n            {\r\n                title: 'Total Projects',\r\n                description: 'Last Calendar Month',\r\n                labels: ['Firm', 'My'],\r\n                values: [totalProjects.total_firm_projects, totalProjects.total_my_projects]\r\n            }\r\n        ]\r\n    }\r\n\r\n    const _petitioner = {\r\n        columns: [\r\n            {\r\n                title: 'Total Petitioner',\r\n                description: '',\r\n                labels: ['Firm', 'My'],\r\n                values: [petitioner.total_firm_petitioner, petitioner.total_my_petitioner]\r\n            },\r\n            {\r\n                title: 'Total New Petitioner',\r\n                description: '',\r\n                labels: ['Firm', 'My'],\r\n                values: [petitioner.total_new_firm_petitioner, petitioner.total_new_my_petitioner]\r\n            }\r\n        ]\r\n    }\r\n\r\n    const _beneficiary = {\r\n        columns: [\r\n            {\r\n                title: 'Total Beneficiary',\r\n                description: '',\r\n                labels: ['Firm', 'My'],\r\n                values: [beneficiary.total_firm_beneficiary, beneficiary.total_my_beneficiary]\r\n            },\r\n            {\r\n                title: 'Total New Beneficiary',\r\n                description: '',\r\n                labels: ['Firm', 'My'],\r\n                values: [beneficiary.total_new_firm_beneficiary, beneficiary.total_new_my_beneficiary]\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Col sm={12} lg={12} xl={12}>\r\n            <Row className=\"grid-containerx draggable-area row-sm\">\r\n                <Permission disallowedRoles={[BENEFICIARY]}>\r\n                    <Col className=\"box1 editable\" sm={12} md={3} lg={3} xl={2}>\r\n                        <CustomTile initialState={_totalProjects} />\r\n                    </Col>\r\n                </Permission>\r\n\r\n                <Permission allowedRoles={[ATTORNEY, PARALEGAL]}>\r\n                    <Col className=\"box2 editable\" sm={12} md={6} lg={6} xl={5}>\r\n                        <CustomTile initialState={_petitioner} />\r\n                    </Col>\r\n                </Permission>\r\n\r\n                <Permission allowedRoles={[ATTORNEY, PARALEGAL, BENEFICIARY]}>\r\n                    <Col className=\"box3 editable\" sm={12} md={6} lg={6} xl={5}>\r\n                        <CustomTile initialState={_beneficiary} />\r\n                    </Col>\r\n                </Permission>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst CaseGraphs = ({ graphsData }) => {\r\n    return (\r\n        <Col xl={12} lg={12} md={12} className=\"mb-0\">\r\n            <Row>\r\n                <Permission allowedRoles={[ATTORNEY, PARALEGAL]}>\r\n                    <Col xxl={6} xl={12} lg={12} md={12}>\r\n                        <Card className=\"custom-card\">\r\n                            <Card.Header className=\" border-bottom-0\">\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div>\r\n                                        <label className=\"main-content-label my-auto pt-2\">Project Filed</label>\r\n                                        <span className=\"d-block tx-12 mb-0 mt-1 text-muted\">\r\n                                            Revenue is the total amount of income generated by the sale of goods.\r\n                                        </span>\r\n                                    </div>\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle variant=\"primary\" size=\"sm\">\r\n                                            Compare\r\n                                            <i className=\"fas fa-caret-down ms-1\"></i>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu style={{ marginTop: '0px' }}>\r\n                                            <Dropdown.Item href=\"#/action-1\">Previous Filed</Dropdown.Item>\r\n                                            <Dropdown.Item href=\"#/action-1\">Current Filed</Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body style={{ paddingTop: 0 }}>\r\n                                <div className=\"chart-wrapperchart-dropshadow2 ht-300\">\r\n                                    <Line\r\n                                        options={edashboard.caseFiledOptions}\r\n                                        data={edashboard.loadFiledData(graphsData?.filed)}\r\n                                        className=\"barchart chart-dropshadow2 ht-300 chartjs-render-monitor\"\r\n                                        height=\"100\"\r\n                                    />\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Permission>\r\n                <Permission allowedRoles={[ATTORNEY, PARALEGAL]}>\r\n                    <Col xxl={6} xl={12} lg={12} md={12}>\r\n                        <Card className=\"custom-card\">\r\n                            <Card.Header className=\" border-bottom-0\">\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div>\r\n                                        <label className=\"main-content-label my-auto pt-2\">Project Initiated</label>\r\n                                        <span className=\"d-block tx-12 mb-0 mt-1 text-muted\">\r\n                                            Revenue is the total amount of income generated by the sale of goods.\r\n                                        </span>\r\n                                    </div>\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle variant=\"info\" size=\"sm\">\r\n                                            Compare\r\n                                            <i className=\"fas fa-caret-down ms-1\"></i>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu style={{ marginTop: '0px' }}>\r\n                                            <Dropdown.Item href=\"#/action-1\">Previous Initiated</Dropdown.Item>\r\n                                            <Dropdown.Item href=\"#/action-1\">Current Initiated</Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body style={{ paddingTop: 0 }}>\r\n                                <div className=\"chart-wrapperchart-dropshadow2 ht-300\">\r\n                                    <Line\r\n                                        options={edashboard.caseInitiatedOptions}\r\n                                        data={edashboard.loadInitiatedData(graphsData?.initiated)}\r\n                                        className=\"barchart chart-dropshadow2 ht-300 chartjs-render-monitor\"\r\n                                        height=\"100\"\r\n                                    />\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Permission>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst OpenCasesListView = ({ paralegalProjects }) => {\r\n    paralegalProjects = paralegalProjects || []\r\n\r\n    let sumValue = paralegalProjects?.map((e) => e.CountOFProject)\r\n\r\n    if (sumValue.length) sumValue = sumValue.reduce((a, b) => a + b)\r\n\r\n    return (\r\n        <Col xl={3} md={12} sm={12}>\r\n            <Card className=\"custom-card\">\r\n                <Card.Body className=\"dashboard-recent-cases\">\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <div>\r\n                            <h5 className=\"main-content-label m-0\">\r\n                                OPEN PROJECTS BY PARALEGAL\r\n                                <Badge pill bg=\"primary\" className=\"ms-2\">\r\n                                    {sumValue}\r\n                                </Badge>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <ListGroup className=\"task-list-group mt-3\">\r\n                        {paralegalProjects.map((item) => {\r\n                            return (\r\n                                <ListGroup.Item action className=\"flex-column align-items-start p-3\" key={uuidv4()}>\r\n                                    <div className=\"d-flex w-100 justify-content-between\">\r\n                                        <h6 className=\"font-weight-semibold\">\r\n                                            {`${item.FirstName} ${item.LastName}`}: {item.CountOFProject}\r\n                                        </h6>\r\n                                    </div>\r\n                                </ListGroup.Item>\r\n                            )\r\n                        })}\r\n                    </ListGroup>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst CustomTileView = () => {\r\n    return (\r\n        <Row className=\"row-sm\">\r\n            <Permission allowedRoles={[ATTORNEY, PARALEGAL]}>\r\n                <Col md={6} sm={6} xl={3}>\r\n                    <Card className=\"custom-card\">\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"icon-service bg-primary-transparent rounded-circle text-primary\">\r\n                                <i className=\"fe fe-user\"></i>\r\n                            </div>\r\n                            <p className=\"mb-1 text-muted\">Custom Label 1</p>\r\n                            <h3 className=\"mb-0\">0</h3>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Permission>\r\n            <Permission allowedRoles={[ATTORNEY, PARALEGAL]}>\r\n                <Col md={6} sm={6} xl={3}>\r\n                    <Card className=\"custom-card\">\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"icon-service bg-primary-transparent rounded-circle text-primary\">\r\n                                <i className=\"fe fe-user\"></i>\r\n                            </div>\r\n                            <p className=\"mb-1 text-muted\">Custom Label 2</p>\r\n                            <h3 className=\"mb-0\">0</h3>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Permission>\r\n            <Permission allowedRoles={[ATTORNEY, PARALEGAL]}>\r\n                <Col md={6} sm={6} xl={3}>\r\n                    <Card className=\"custom-card\">\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"icon-service bg-primary-transparent rounded-circle text-primary\">\r\n                                <i className=\"fe fe-user\"></i>\r\n                            </div>\r\n                            <p className=\"mb-1 text-muted\">Custom Label 3</p>\r\n                            <h3 className=\"mb-0\">0</h3>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Permission>\r\n            <Permission allowedRoles={[ATTORNEY, PARALEGAL]}>\r\n                <Col md={6} sm={6} xl={3}>\r\n                    <Card className=\"custom-card\">\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"icon-service bg-primary-transparent rounded-circle text-primary\">\r\n                                <i className=\"fe fe-user\"></i>\r\n                            </div>\r\n                            <p className=\"mb-1 text-muted\">Custom Label 4</p>\r\n                            <h3 className=\"mb-0\">0</h3>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Permission>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport { OverviewTiles, CaseGraphs, OpenCasesListView, CustomTileView }\r\n","import { api } from \"config/axiosConfig\";\r\n\r\nexport const dashboardService = {\r\n    getAllData: async () => {\r\n        const response = await api.request({\r\n            url: `/dashboard`,\r\n            method: \"GET\",\r\n        });\r\n        return response.data;\r\n    },\r\n};\r\n","import React from \"react\";\r\nimport \"components/Common/FullScreenLoader/index.style.scss\";\r\nimport { Alert, Spinner } from \"react-bootstrap\";\r\n\r\nexport default function FullScreenLoader() {\r\n    return (\r\n        <div className=\"full-page\">\r\n            <Alert className={`login-alert alert alert-primary text-start`} role=\"alert\">\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\"></span>\r\n                </Spinner>\r\n                <strong>Loading...</strong>\r\n            </Alert>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\"\r\nimport { Row, Col, Button, Modal } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setInitialData, setLoading } from \"store/slices/dashboardSlice\"\r\n\r\nimport PageHeader from \"layouts/PageHeader/PageHeader\"\r\nimport { CaseGraphs, OverviewTiles, OpenCasesListView, CustomTileView } from \"components/Dashboard/UserDashboard\"\r\nimport { dashboardService } from \"services/dashboard.service\"\r\nimport FullScreenLoader from \"components/Common/FullScreenLoader\"\r\nimport { useLocation, useNavigate } from \"react-router-dom\"\r\n\r\nfunction Dashboard() {\r\n\r\n    /* ====================== Hooks ===================== */\r\n\r\n    const [showModal, setModal] = useState(false)\r\n    const [renameModal, setRenameModal] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n    const initialState = useSelector((state) => {\r\n        return state.dashboard\r\n    })\r\n\r\n    const appUser = useSelector((state) => {\r\n        return state['app-user']\r\n    })\r\n\r\n    /* ====================== onContentLoaded ===================== */\r\n\r\n    useEffect(() => {\r\n        dispatch(setLoading(true))\r\n        dashboardService.getAllData().then((res) => {\r\n            dispatch(setInitialData(res))\r\n        }).catch(err => {\r\n            dispatch(setLoading(false))\r\n        })\r\n    }, [location.pathname])\r\n\r\n    /* ====================== functions ===================== */\r\n\r\n    let handleModal = (status) => {\r\n        setModal(status)\r\n    }\r\n\r\n    /* ====================== Modularized Components ===================== */\r\n\r\n    const Container = () => {\r\n\r\n        if (initialState?.isLoading) return <FullScreenLoader />\r\n        else\r\n            return (\r\n                <div className=\"dashboard-page\">\r\n                    <Row className=\"row-sm\">\r\n                        <Col xl={9} sm={9} lg={12}>\r\n                            <Row className=\"row-sm\">\r\n                                <OverviewTiles totalProjects={initialState.total_projects} petitioner={initialState.total_petitioner} beneficiary={initialState.total_beneficiary} />\r\n                                <CaseGraphs graphsData={initialState.project_graph} />\r\n                            </Row>\r\n                        </Col>\r\n                        <OpenCasesListView paralegalProjects={initialState?.open_project_para} />\r\n                    </Row>\r\n                    {/* Bottom - Custom Tiles */}\r\n                    <CustomTileView />\r\n                    {/* <!-- Row end --> */}\r\n                </div>\r\n            )\r\n    }\r\n\r\n    /* ====================== Component Render ===================== */\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <!-- Page Header --> */}\r\n            <PageHeader Header={`Welcome ${appUser?.firstname}!`} BreadcrumbItemList={[{ name: \"Dashboard\" }]} />\r\n\r\n            <Container />\r\n\r\n            <Modal show={showModal} size=\"large\">\r\n                <Modal.Header\r\n                    closeButton\r\n                    onClick={() => {\r\n                        handleModal(false)\r\n                    }}\r\n                >\r\n                    <h6>PR Information & Status</h6>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {/* <h6>Modal Body</h6> */}\r\n                    There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration.\r\n                    <br />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            handleModal(false)\r\n                        }}\r\n                        className=\"text-center\"\r\n                    >\r\n                        Ok\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                            handleModal(false)\r\n                        }}\r\n                        className=\"text-center\"\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={renameModal} size=\"md\" backdrop=\"false\">\r\n                <Modal.Header closeButton onClick={() => setRenameModal(false)}>\r\n                    <Modal.Title>Rename Tile</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{/* {tileRenameModalBody()} */}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={() => setRenameModal(false)}>\r\n                        Save Changes\r\n                    </Button>\r\n                    <Button variant=\"secondary\" onClick={() => setRenameModal(false)}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nDashboard.propTypes = {}\r\n\r\nDashboard.defaultProps = {}\r\n\r\nexport default Dashboard\r\n"],"names":["_ref","initialState","TileData","_ref2","values","type","map","value","_jsx","className","children","uuid","Badge","bg","Card","columns","column","_jsxs","title","undefined","description","labels","Permission","_appUser$usertype","allowedRoles","disallowedRoles","appUser","useSelector","state","current_user","permission","usertype","toUpperCase","includes","length","ChartJS","ArcElement","LineElement","BarElement","PointElement","BarController","BubbleController","DoughnutController","LineController","PieController","PolarAreaController","RadarController","ScatterController","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","Decimation","Filler","Legend","Title","Tooltip","SubTitle","allMonths","loadFiledData","previous_filed","this_filed","previous_filed_data","x","TotalCount","this_filed_data","datasets","label","data","borderWidth","backgroundColor","borderColor","pointBackgroundColor","pointRadius","tension","borderDash","loadInitiatedData","previous_initiated","this_initiated","previous_initiated_data","this_initiated_data","caseFiledOptions","responsive","maintainAspectRatio","plugins","display","legend","position","tooltip","enabled","scales","ticks","fontColor","barPercentage","grid","y","scaleLabel","labelString","interaction","intersect","caseInitiatedOptions","ATTORNEY","BENEFICIARY","PARALEGAL","OverviewTiles","totalProjects","petitioner","beneficiary","_totalProjects","total_firm_projects","total_my_projects","_petitioner","total_firm_petitioner","total_my_petitioner","total_new_firm_petitioner","total_new_my_petitioner","_beneficiary","total_firm_beneficiary","total_my_beneficiary","total_new_firm_beneficiary","total_new_my_beneficiary","Col","sm","lg","xl","Row","md","CustomTile","CaseGraphs","graphsData","xxl","Dropdown","variant","size","style","marginTop","href","paddingTop","Line","options","edashboard","filed","height","initiated","OpenCasesListView","_ref3","_paralegalProjects","paralegalProjects","sumValue","e","CountOFProject","reduce","a","b","pill","ListGroup","item","action","concat","FirstName","LastName","uuidv4","CustomTileView","dashboardService","getAllData","_getAllData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","api","url","method","sent","abrupt","stop","apply","arguments","FullScreenLoader","Alert","role","Spinner","animation","Dashboard","_useState","useState","_useState2","_slicedToArray","showModal","setModal","_useState3","_useState4","renameModal","setRenameModal","dispatch","useDispatch","location","useLocation","useNavigate","dashboard","useEffect","setLoading","then","res","setInitialData","catch","err","pathname","handleModal","status","Container","isLoading","total_projects","total_petitioner","total_beneficiary","project_graph","open_project_para","Fragment","PageHeader","Header","firstname","BreadcrumbItemList","name","Modal","show","closeButton","onClick","Button","backdrop","defaultProps"],"sourceRoot":""}